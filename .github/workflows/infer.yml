# name: infer

# on: [push,pull_request]

# jobs:
#   infer:
#     runs-on: ubuntu-latest
#     continue-on-error: true
#     steps:
#     - uses: actions/checkout@v2
#       with:
#         submodules: true

#     - name: infer install
#       run: |
#         sudo apt install -y curl
#         VERSION=1.1.0; \
#         curl -sSL "https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz" \
#         | sudo tar -C /opt -xJ && \
#         sudo ln -s "/opt/infer-linux64-v$VERSION/bin/infer" /usr/local/bin/infer

#     - name: clang install
#       run: sudo apt install -y clang-12 --install-suggests

#     - name: ninja install
#       run: sudo apt-get install -y ninja-build

#     - name: python install
#       uses: actions/setup-python@v2

#     - name: opencv cache
#       id: opencv-cache
#       uses: actions/cache@v2
#       with:
#         path: ./opencv-install
#         key: ${{runner.os}}-opencv-cache

#     - name: opencv install
#       uses: rayandrews/with-opencv-action@v1
#       with:
#         opencv-version: '4.5.1'
#         dir: ./opencv-install
#         cached: ${{steps.opencv-cache.outputs.cache-hit}}

#     - name: qt cache
#       id: qt-cache
#       uses: actions/cache@v2
#       with:
#         path: ./qt
#         key: ${{runner.os}}-qt-cache

#     - name: qt install
#       uses: jurplel/install-qt-action@v2
#       with:
#         version: "5.12.2"
#         dir: "./qt"
#         install-deps: true
#         setup-python: false
#         cached: ${{steps.qt-cache.outputs.cache-hit}}

#     - name: cmake configure
#       env:
#         CMAKE_PREFIX_PATH: ${{env.Qt5_Dir}}
#         CC: clang
#         CXX: clang++
#       run: cmake -DCMAKE_BUILD_TYPE=Release -B '${{github.workspace}}'/build -G "Ninja" -DCI=ON

#     - name: infer run
#       continue-on-error: true
#       run: infer run --compilation-database build/compile_commands.json
