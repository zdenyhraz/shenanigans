name: build-windows

on: [push,pull_request]
env:
  CI: ON

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        build-type: [Debug]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Libs cache
      id: libs-cache
      uses: actions/cache@v3
      with:
        path: |
          libs/opencv-install
          libs/libzmq-install
        key: ${{ runner.os }}-${{ matrix.build-type }}-libs-cache-v1

    - name: ZeroMQ install from cache
      if: steps.libs-cache.outputs.cache-hit == 'true'
      run: cd libs/libzmq && cmake --install build --prefix ../libzmq-install

    - name: ZeroMQ install from source
      if: steps.libs-cache.outputs.cache-hit != 'true'
      run: |
        cd libs/libzmq
        mkdir build
        cmake -B build -D CMAKE_BUILD_TYPE=${{ matrix.build-type }}
        cmake --build build --config ${{ matrix.build-type }} -j4
        dir build
        cmake --install build --prefix ../libzmq-install

    - name: OpenCV install from cache
      if: steps.libs-cache.outputs.cache-hit == 'true'
      run: cd libs/opencv && cmake --install build --prefix ../opencv-install

    - name: OpenCV install from source
      if: steps.libs-cache.outputs.cache-hit != 'true'
      run: |
        cd libs/opencv
        mkdir build
        cmake -B build -D CMAKE_BUILD_TYPE=${{ matrix.build-type }} -DOPENCV_EXTRA_MODULES_PATH="../opencv_contrib/modules" -DOPENCV_ENABLE_NONFREE=ON -DBUILD_TESTS=OFF -DBUILD_opencv_python=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_apps=OFF
        cmake --build build --config ${{ matrix.build-type }} -j4
        cmake --install build --prefix ../opencv-install

    - name: Build
      run: |
        mkdir build
        cmake -B build -D CMAKE_BUILD_TYPE=${{ matrix.build-type }}
        cmake --build build --config ${{ matrix.build-type }} -j4

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ runner.os }}-${{ matrix.build-type }}
        path: build

