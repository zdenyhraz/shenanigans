name: build-linux

on: [push,pull_request]
env:
  CI: ON

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [Debug]
        #build-type: [Debug, Release]
        compiler: [gcc]
        #compiler: [gcc, clang]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Install cmake/ninja/gui
      run: |
        sudo apt-get install -y cmake
        sudo apt install ninja-build
        sudo apt install libglu1-mesa-dev mesa-common-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev

    - name: Install GCC 13
      if: matrix.compiler == 'gcc'
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get install -y gcc-13 g++-13
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-13 100 && sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-13 100

    - name: Install Clang 17
      if: matrix.compiler == 'clang'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb https://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-17 main"
        sudo apt update
        sudo apt install clang-17
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100 && sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100

    - name: OpenCV cache
      id: opencv-cache
      uses: actions/cache@v3
      with:
        path: libs/opencv/build
        key: ${{ runner.os }}-opencv-cache-v1

    - name: OpenCV install from cache
      if: steps.opencv-cache.outputs.cache-hit == 'true'
      run: cd libs/opencv && cmake --install build

    - name: OpenCV install from source
      if: steps.opencv-cache.outputs.cache-hit != 'true'
      run: |
        cd libs/opencv
        mkdir build
        cmake -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -DOPENCV_EXTRA_MODULES_PATH="../opencv_contrib/modules" -DOPENCV_ENABLE_NONFREE=ON -DBUILD_TESTS=OFF -DBUILD_opencv_python=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_apps=OFF
        cmake --build build --config Release -j$((`nproc`+1))
        cmake --install build

    - name: Build
      run: |
        mkdir build
        cmake -B build -G Ninja -D CMAKE_BUILD_TYPE=${{ matrix.build-type }}
        echo "${{ github.workspace }}/build/lib" >> $GITHUB_PATH
        cmake --build build --config ${{ matrix.build-type }} -j$((`nproc`+1))

    - name: Test
      run: |
        cd build
        ctest --output-on-failure
